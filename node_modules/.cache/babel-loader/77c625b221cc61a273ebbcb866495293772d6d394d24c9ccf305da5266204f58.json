{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankush\\\\Desktop\\\\myMernProject\\\\frontend\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axiosInstance from './api/axios'; // Using axiosInstance for API requests\nimport { useNavigate } from 'react-router-dom'; // For redirection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [step, setStep] = useState(1); // Step 1: Select Tenant/Owner; Step 2: Show Login form\n  const [userType, setUserType] = useState(''); // Track user type (Tenant or Owner)\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [showPassword, setShowPassword] = useState(false); // For \"Show Password\" toggle\n  const [loginSuccessMessage, setLoginSuccessMessage] = useState(''); // For showing success message\n  const [loginSuccessful, setLoginSuccessful] = useState(false); // Track if login was successful\n  const navigate = useNavigate(); // For redirection\n\n  // Simple validation function for email and password\n  const validateInputs = () => {\n    let valid = true;\n    let newErrors = {};\n\n    // Validate email\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailPattern.test(formData.email)) {\n      newErrors.email = 'Email is not valid';\n      valid = false;\n    }\n\n    // Validate password\n    if (formData.password === '') {\n      newErrors.password = 'Password is required';\n      valid = false;\n    }\n    setErrors(newErrors);\n    return valid;\n  };\n\n  // Handle login request\n  const handleLogin = async () => {\n    if (validateInputs()) {\n      setLoading(true);\n      try {\n        // Send login request to backend using axiosInstance\n        const response = await axiosInstance.post('auth/login', {\n          email: formData.email,\n          password: formData.password,\n          userType: userType // Send the selected userType (tenant/owner)\n        });\n\n        // If login is successful, retrieve token and user data\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token and user data in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n\n        // Show success message\n        setLoginSuccessMessage('Login Successful!');\n        setLoginSuccessful(true); // Set login success state to true\n        setLoading(false);\n\n        // After 2 seconds, navigate to the appropriate dashboard based on userType\n        setTimeout(() => {\n          if (user.userType === 'tenant') {\n            console.log(\"Navigating to tenant dashboard\");\n            navigate('/tenant-dashboard'); // Redirect tenant to tenant dashboard\n          } else if (user.userType === 'owner') {\n            console.log(\"Navigating to owner dashboard\");\n            navigate('/owner-dashboard'); // Redirect owner to owner dashboard\n          }\n        }, 2000); // Show success message for 2 seconds before redirecting\n      } catch (error) {\n        var _error$response, _error$response$data, _error$response2, _error$response2$data;\n        setLoading(false);\n        console.error('Login error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg) || 'Login failed');\n        setErrors({\n          email: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.msg) || 'Invalid email or password'\n        }); // Show error message\n      }\n    }\n  };\n\n  // Handle input change\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle user type selection\n  const handleUserTypeSelection = type => {\n    setUserType(type);\n    setStep(2); // Move to the login form after selection\n  };\n\n  // Handle Back button to go back to user type selection\n  const handleBack = () => {\n    setStep(1); // Go back to tenant/owner selection\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 py-10 min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto px-6\",\n      children: step === 1 ?\n      /*#__PURE__*/\n      // Step 1: Select Tenant or Owner\n      _jsxDEV(\"div\", {\n        className: \"bg-white p-10 shadow-xl rounded-lg mb-10 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl text-customGreen font-bold mb-6\",\n          children: \"Welcome to DocEase!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-600 mb-6\",\n          children: \"Are you logging in as a Tenant or an Owner?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center space-x-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUserTypeSelection('tenant'),\n            className: \"bg-customGreen text-white py-3 px-6 rounded-lg hover:bg-green-600\",\n            children: \"Login as Tenant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUserTypeSelection('owner'),\n            className: \"bg-customGreen text-white py-3 px-6 rounded-lg hover:bg-green-600\",\n            children: \"Login as Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this) : loginSuccessful ?\n      /*#__PURE__*/\n      // Show Login Success Message if loginSuccessful is true\n      _jsxDEV(\"div\", {\n        className: \"text-center mt-10\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-6xl text-customGreen font-bold mb-6\",\n          children: \"Login Successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      // Step 2: Login form\n      _jsxDEV(\"div\", {\n        className: \"bg-white p-10 shadow-xl rounded-lg mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl text-customGreen font-bold mb-6 text-center\",\n          children: [\"Login as \", userType === 'tenant' ? 'Tenant' : 'Owner']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-lg text-gray-600 mb-2\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              className: \"w-full border border-gray-300 rounded-lg p-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-lg text-gray-600 mb-2\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: showPassword ? 'text' : 'password',\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              className: \"w-full border border-gray-300 rounded-lg p-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"showPassword\",\n                checked: showPassword,\n                onChange: () => setShowPassword(!showPassword)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"showPassword\",\n                className: \"ml-2 text-sm text-gray-600\",\n                children: \"Show Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleLogin,\n            className: \"w-full bg-customGreen text-white py-3 rounded-lg hover:bg-green-600\",\n            disabled: loading,\n            children: loading ? 'Logging in...' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleBack,\n            className: \"w-full bg-gray-400 text-white py-3 rounded-lg hover:bg-gray-600 mt-4\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/forgot-password\",\n              className: \"text-sm text-customGreen hover:underline\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"H6S1iQy8QBAxWrqrPs64H0SB5wY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axiosInstance","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","step","setStep","userType","setUserType","formData","setFormData","email","password","errors","setErrors","loading","setLoading","showPassword","setShowPassword","loginSuccessMessage","setLoginSuccessMessage","loginSuccessful","setLoginSuccessful","navigate","validateInputs","valid","newErrors","emailPattern","test","handleLogin","response","post","token","user","data","localStorage","setItem","JSON","stringify","setTimeout","console","log","error","_error$response","_error$response$data","_error$response2","_error$response2$data","msg","handleInputChange","e","target","name","value","handleUserTypeSelection","type","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","id","checked","htmlFor","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/Ankush/Desktop/myMernProject/frontend/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axiosInstance from './api/axios'; // Using axiosInstance for API requests\r\nimport { useNavigate } from 'react-router-dom'; // For redirection\r\n\r\nconst LoginPage = () => {\r\n    const [step, setStep] = useState(1); // Step 1: Select Tenant/Owner; Step 2: Show Login form\r\n    const [userType, setUserType] = useState(''); // Track user type (Tenant or Owner)\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [loading, setLoading] = useState(false); // Track loading state\r\n    const [showPassword, setShowPassword] = useState(false); // For \"Show Password\" toggle\r\n    const [loginSuccessMessage, setLoginSuccessMessage] = useState(''); // For showing success message\r\n    const [loginSuccessful, setLoginSuccessful] = useState(false); // Track if login was successful\r\n    const navigate = useNavigate(); // For redirection\r\n\r\n    // Simple validation function for email and password\r\n    const validateInputs = () => {\r\n        let valid = true;\r\n        let newErrors = {};\r\n\r\n        // Validate email\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailPattern.test(formData.email)) {\r\n            newErrors.email = 'Email is not valid';\r\n            valid = false;\r\n        }\r\n\r\n        // Validate password\r\n        if (formData.password === '') {\r\n            newErrors.password = 'Password is required';\r\n            valid = false;\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return valid;\r\n    };\r\n\r\n    // Handle login request\r\n    const handleLogin = async () => {\r\n        if (validateInputs()) {\r\n            setLoading(true);\r\n            try {\r\n                // Send login request to backend using axiosInstance\r\n                const response = await axiosInstance.post('auth/login', {\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                    userType: userType, // Send the selected userType (tenant/owner)\r\n                });\r\n\r\n                // If login is successful, retrieve token and user data\r\n                const { token, user } = response.data;\r\n\r\n                // Store token and user data in localStorage\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                // Show success message\r\n                setLoginSuccessMessage('Login Successful!');\r\n                setLoginSuccessful(true); // Set login success state to true\r\n                setLoading(false);\r\n\r\n                // After 2 seconds, navigate to the appropriate dashboard based on userType\r\n                setTimeout(() => {\r\n                    if (user.userType === 'tenant') {\r\n                        console.log(\"Navigating to tenant dashboard\");\r\n                        navigate('/tenant-dashboard'); // Redirect tenant to tenant dashboard\r\n                    } else if (user.userType === 'owner') {\r\n                        console.log(\"Navigating to owner dashboard\");\r\n                        navigate('/owner-dashboard'); // Redirect owner to owner dashboard\r\n                    }\r\n                }, 2000); // Show success message for 2 seconds before redirecting\r\n            } catch (error) {\r\n                setLoading(false);\r\n                console.error('Login error:', error.response?.data?.msg || 'Login failed');\r\n                setErrors({ email: error.response?.data?.msg || 'Invalid email or password' }); // Show error message\r\n            }\r\n        }\r\n    };\r\n\r\n    // Handle input change\r\n    const handleInputChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    // Handle user type selection\r\n    const handleUserTypeSelection = (type) => {\r\n        setUserType(type);\r\n        setStep(2); // Move to the login form after selection\r\n    };\r\n\r\n    // Handle Back button to go back to user type selection\r\n    const handleBack = () => {\r\n        setStep(1); // Go back to tenant/owner selection\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gray-100 py-10 min-h-screen\">\r\n            <div className=\"max-w-3xl mx-auto px-6\">\r\n                {step === 1 ? (\r\n                    // Step 1: Select Tenant or Owner\r\n                    <div className=\"bg-white p-10 shadow-xl rounded-lg mb-10 text-center\">\r\n                        <h1 className=\"text-4xl text-customGreen font-bold mb-6\">Welcome to DocEase!</h1>\r\n                        <p className=\"text-lg text-gray-600 mb-6\">Are you logging in as a Tenant or an Owner?</p>\r\n                        <div className=\"flex justify-center space-x-10\">\r\n                            <button\r\n                                onClick={() => handleUserTypeSelection('tenant')}\r\n                                className=\"bg-customGreen text-white py-3 px-6 rounded-lg hover:bg-green-600\"\r\n                            >\r\n                                Login as Tenant\r\n                            </button>\r\n                            <button\r\n                                onClick={() => handleUserTypeSelection('owner')}\r\n                                className=\"bg-customGreen text-white py-3 px-6 rounded-lg hover:bg-green-600\"\r\n                            >\r\n                                Login as Owner\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ) : loginSuccessful ? (\r\n                    // Show Login Success Message if loginSuccessful is true\r\n                    <div className=\"text-center mt-10\">\r\n                        <h1 className=\"text-6xl text-customGreen font-bold mb-6\">Login Successful!</h1>\r\n                    </div>\r\n                ) : (\r\n                    // Step 2: Login form\r\n                    <div className=\"bg-white p-10 shadow-xl rounded-lg mb-10\">\r\n                        <h1 className=\"text-4xl text-customGreen font-bold mb-6 text-center\">\r\n                            Login as {userType === 'tenant' ? 'Tenant' : 'Owner'}\r\n                        </h1>\r\n\r\n                        <form>\r\n                            <div className=\"mb-6\">\r\n                                <label className=\"block text-lg text-gray-600 mb-2\">Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"w-full border border-gray-300 rounded-lg p-3\"\r\n                                />\r\n                                {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n                            </div>\r\n\r\n                            <div className=\"mb-6\">\r\n                                <label className=\"block text-lg text-gray-600 mb-2\">Password</label>\r\n                                <input\r\n                                    type={showPassword ? 'text' : 'password'}\r\n                                    name=\"password\"\r\n                                    value={formData.password}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"w-full border border-gray-300 rounded-lg p-3\"\r\n                                />\r\n                                {errors.password && <p className=\"text-red-500 text-sm\">{errors.password}</p>}\r\n                                <div className=\"mt-2\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"showPassword\"\r\n                                        checked={showPassword}\r\n                                        onChange={() => setShowPassword(!showPassword)}\r\n                                    />\r\n                                    <label htmlFor=\"showPassword\" className=\"ml-2 text-sm text-gray-600\">Show Password</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleLogin}\r\n                                className=\"w-full bg-customGreen text-white py-3 rounded-lg hover:bg-green-600\"\r\n                                disabled={loading}\r\n                            >\r\n                                {loading ? 'Logging in...' : 'Login'}\r\n                            </button>\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleBack}\r\n                                className=\"w-full bg-gray-400 text-white py-3 rounded-lg hover:bg-gray-600 mt-4\"\r\n                            >\r\n                                Back\r\n                            </button>\r\n\r\n                            <div className=\"mt-4 text-center\">\r\n                                <a href=\"/forgot-password\" className=\"text-sm text-customGreen hover:underline\">\r\n                                    Forgot Password?\r\n                                </a>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}