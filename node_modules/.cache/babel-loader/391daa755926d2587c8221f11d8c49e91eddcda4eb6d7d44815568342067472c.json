{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankush\\\\Desktop\\\\myMernProject\\\\frontend\\\\src\\\\OwnerProperties.js\",\n  _s = $RefreshSig$();\n// OwnerProperties.js\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from './api/axios'; // Import axios instance for API calls\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OwnerProperties = () => {\n  _s();\n  const [properties, setProperties] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Fetch properties when component mounts\n  useEffect(() => {\n    const fetchProperties = async () => {\n      try {\n        const ownerId = localStorage.getItem('userId'); // Get the owner's ID from localStorage\n        const response = await axiosInstance.get(`properties/owner/${ownerId}`);\n        setProperties(response.data);\n      } catch (error) {\n        setErrorMessage('Error fetching properties');\n      }\n    };\n    fetchProperties();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-6\",\n      children: \"Your Listed Properties\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), errorMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\",\n      children: properties.map(property => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 shadow rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: property.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rent: $\", property.rent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deposit: $\", property.deposit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 text-white mt-4 py-2 px-4 rounded\",\n          onClick: () => alert(`Viewing details of ${property._id}`),\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, property._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(OwnerProperties, \"BSEHiOcyL4znqslTMGqf+MvR/OY=\");\n_c = OwnerProperties;\nexport default OwnerProperties;\nvar _c;\n$RefreshReg$(_c, \"OwnerProperties\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","jsxDEV","_jsxDEV","OwnerProperties","_s","properties","setProperties","errorMessage","setErrorMessage","fetchProperties","ownerId","localStorage","getItem","response","get","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","property","address","rent","deposit","onClick","alert","_id","_c","$RefreshReg$"],"sources":["C:/Users/Ankush/Desktop/myMernProject/frontend/src/OwnerProperties.js"],"sourcesContent":["// OwnerProperties.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axiosInstance from './api/axios'; // Import axios instance for API calls\r\n\r\nconst OwnerProperties = () => {\r\n    const [properties, setProperties] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    // Fetch properties when component mounts\r\n    useEffect(() => {\r\n        const fetchProperties = async () => {\r\n            try {\r\n                const ownerId = localStorage.getItem('userId'); // Get the owner's ID from localStorage\r\n                const response = await axiosInstance.get(`properties/owner/${ownerId}`);\r\n                setProperties(response.data);\r\n            } catch (error) {\r\n                setErrorMessage('Error fetching properties');\r\n            }\r\n        };\r\n        fetchProperties();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container mx-auto py-10\">\r\n            <h1 className=\"text-4xl font-bold mb-6\">Your Listed Properties</h1>\r\n\r\n            {errorMessage ? (\r\n                <div className=\"text-red-500\">{errorMessage}</div>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\r\n                    {properties.map((property) => (\r\n                        <div key={property._id} className=\"bg-white p-6 shadow rounded-lg\">\r\n                            <h2 className=\"text-xl font-bold\">{property.address}</h2>\r\n                            <p>Rent: ${property.rent}</p>\r\n                            <p>Deposit: ${property.deposit}</p>\r\n                            <button\r\n                                className=\"bg-green-500 text-white mt-4 py-2 px-4 rounded\"\r\n                                onClick={() => alert(`Viewing details of ${property._id}`)}\r\n                            >\r\n                                View Details\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OwnerProperties;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChD,MAAMC,QAAQ,GAAG,MAAMb,aAAa,CAACc,GAAG,CAAC,oBAAoBJ,OAAO,EAAE,CAAC;QACvEJ,aAAa,CAACO,QAAQ,CAACE,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZR,eAAe,CAAC,2BAA2B,CAAC;MAChD;IACJ,CAAC;IACDC,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAKe,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACpChB,OAAA;MAAIe,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAElEf,YAAY,gBACTL,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEX;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAElDpB,OAAA;MAAKe,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAChEb,UAAU,CAACkB,GAAG,CAAEC,QAAQ,iBACrBtB,OAAA;QAAwBe,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC9DhB,OAAA;UAAIe,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAEM,QAAQ,CAACC;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzDpB,OAAA;UAAAgB,QAAA,GAAG,SAAO,EAACM,QAAQ,CAACE,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BpB,OAAA;UAAAgB,QAAA,GAAG,YAAU,EAACM,QAAQ,CAACG,OAAO;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnCpB,OAAA;UACIe,SAAS,EAAC,gDAAgD;UAC1DW,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,sBAAsBL,QAAQ,CAACM,GAAG,EAAE,CAAE;UAAAZ,QAAA,EAC9D;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GATHE,QAAQ,CAACM,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUjB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAClB,EAAA,CA3CID,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AA6CrB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}