{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankush\\\\Desktop\\\\myMernProject\\\\frontend\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axiosInstance from './api/axios'; // Using axiosInstance for API requests\nimport { useNavigate } from 'react-router-dom'; // For redirection\nimport Navbar from './Navbar'; // Import Navbar\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [step, setStep] = useState(1); // Step 1: Select Tenant/Owner; Step 2: Show Login form\n  const [userType, setUserType] = useState(''); // Track user type (Tenant or Owner)\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [showPassword, setShowPassword] = useState(false); // For \"Show Password\" toggle\n  const navigate = useNavigate(); // For redirection\n\n  // Simple validation function for email and password\n  const validateInputs = () => {\n    let valid = true;\n    let newErrors = {};\n\n    // Validate email\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailPattern.test(formData.email)) {\n      newErrors.email = 'Email is not valid';\n      valid = false;\n    }\n\n    // Validate password\n    if (formData.password === '') {\n      newErrors.password = 'Password is required';\n      valid = false;\n    }\n    setErrors(newErrors);\n    return valid;\n  };\n\n  // Handle login request\n  const handleLogin = async () => {\n    if (validateInputs()) {\n      setLoading(true);\n      try {\n        // Send login request to backend using axiosInstance\n        const response = await axiosInstance.post('auth/login', {\n          email: formData.email,\n          password: formData.password,\n          userType: userType // Send the selected userType (tenant/owner)\n        });\n\n        // If login is successful, retrieve token and user data\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token and user data in localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user)); // Store user data\n\n        setLoading(false);\n        console.log(response.data); // Log the successful response\n\n        // Redirect to the appropriate dashboard based on userType\n        if (user.userType === 'tenant') {\n          navigate('/tenant-dashboard'); // Redirect tenant to tenant dashboard\n        } else {\n          navigate('/owner-dashboard'); // Redirect owner to owner dashboard\n        }\n      } catch (error) {\n        var _error$response, _error$response$data, _error$response2, _error$response2$data;\n        setLoading(false);\n        console.error('Login error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg) || 'Login failed');\n        setErrors({\n          email: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.msg) || 'Invalid email or password'\n        }); // Show error message\n      }\n    }\n  };\n\n  // Handle input change\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle user type selection\n  const handleUserTypeSelection = type => {\n    setUserType(type);\n    setStep(2); // Move to the login form after selection\n  };\n\n  // Handle Back button to go back to user type selection\n  const handleBack = () => {\n    setStep(1); // Go back to tenant/owner selection\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 py-10 min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto px-6\",\n        children: step === 1 ?\n        /*#__PURE__*/\n        // Step 1: Select Tenant or Owner\n        _jsxDEV(\"div\", {\n          className: \"bg-white p-10 shadow-xl rounded-lg mb-10 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl text-customGreen font-bold mb-6\",\n            children: \"Welcome to DocEase!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg text-gray-600 mb-6\",\n            children: \"Are you logging in as a Tenant or an Owner?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center space-x-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUserTypeSelection('tenant'),\n              className: \"bg-customGreen text-white py-3 px-6 rounded-lg hover:bg-green-600\",\n              children: \"Login as Tenant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUserTypeSelection('owner'),\n              className: \"bg-customGreen text-white py-3 px-6 rounded-lg hover:bg-green-600\",\n              children: \"Login as Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this) :\n        /*#__PURE__*/\n        // Step 2: Login form\n        _jsxDEV(\"div\", {\n          className: \"bg-white p-10 shadow-xl rounded-lg mb-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl text-customGreen font-bold mb-6 text-center\",\n            children: [\"Login as \", userType === 'tenant' ? 'Tenant' : 'Owner']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-lg text-gray-600 mb-2\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                value: formData.email,\n                onChange: handleInputChange,\n                className: \"w-full border border-gray-300 rounded-lg p-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-sm\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-lg text-gray-600 mb-2\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: showPassword ? 'text' : 'password',\n                name: \"password\",\n                value: formData.password,\n                onChange: handleInputChange,\n                className: \"w-full border border-gray-300 rounded-lg p-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-sm\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 57\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"showPassword\",\n                  checked: showPassword,\n                  onChange: () => setShowPassword(!showPassword)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"showPassword\",\n                  className: \"ml-2 text-sm text-gray-600\",\n                  children: \"Show Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleLogin,\n              className: \"w-full bg-customGreen text-white py-3 rounded-lg hover:bg-green-600\",\n              disabled: loading,\n              children: loading ? 'Logging in...' : 'Login'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleBack,\n              className: \"w-full bg-gray-400 text-white py-3 rounded-lg hover:bg-gray-600 mt-4\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/forgot-password\",\n                className: \"text-sm text-customGreen hover:underline\",\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginPage, \"awoLMGL04sd/EylzkOfcQ7AUVC8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axiosInstance","useNavigate","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","step","setStep","userType","setUserType","formData","setFormData","email","password","errors","setErrors","loading","setLoading","showPassword","setShowPassword","navigate","validateInputs","valid","newErrors","emailPattern","test","handleLogin","response","post","token","user","data","localStorage","setItem","JSON","stringify","console","log","error","_error$response","_error$response$data","_error$response2","_error$response2$data","msg","handleInputChange","e","target","name","value","handleUserTypeSelection","type","handleBack","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onChange","id","checked","htmlFor","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/Ankush/Desktop/myMernProject/frontend/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axiosInstance from './api/axios'; // Using axiosInstance for API requests\r\nimport { useNavigate } from 'react-router-dom'; // For redirection\r\nimport Navbar from './Navbar'; // Import Navbar\r\n\r\nconst LoginPage = () => {\r\n    const [step, setStep] = useState(1); // Step 1: Select Tenant/Owner; Step 2: Show Login form\r\n    const [userType, setUserType] = useState(''); // Track user type (Tenant or Owner)\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [loading, setLoading] = useState(false); // Track loading state\r\n    const [showPassword, setShowPassword] = useState(false); // For \"Show Password\" toggle\r\n    const navigate = useNavigate(); // For redirection\r\n\r\n    // Simple validation function for email and password\r\n    const validateInputs = () => {\r\n        let valid = true;\r\n        let newErrors = {};\r\n\r\n        // Validate email\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailPattern.test(formData.email)) {\r\n            newErrors.email = 'Email is not valid';\r\n            valid = false;\r\n        }\r\n\r\n        // Validate password\r\n        if (formData.password === '') {\r\n            newErrors.password = 'Password is required';\r\n            valid = false;\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return valid;\r\n    };\r\n\r\n    // Handle login request\r\n    const handleLogin = async () => {\r\n        if (validateInputs()) {\r\n            setLoading(true);\r\n            try {\r\n                // Send login request to backend using axiosInstance\r\n                const response = await axiosInstance.post('auth/login', {\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                    userType: userType, // Send the selected userType (tenant/owner)\r\n                });\r\n\r\n                // If login is successful, retrieve token and user data\r\n                const { token, user } = response.data;\r\n\r\n                // Store token and user data in localStorage\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('user', JSON.stringify(user)); // Store user data\r\n\r\n                setLoading(false);\r\n                console.log(response.data); // Log the successful response\r\n\r\n                // Redirect to the appropriate dashboard based on userType\r\n                if (user.userType === 'tenant') {\r\n                    navigate('/tenant-dashboard'); // Redirect tenant to tenant dashboard\r\n                } else {\r\n                    navigate('/owner-dashboard'); // Redirect owner to owner dashboard\r\n                }\r\n            } catch (error) {\r\n                setLoading(false);\r\n                console.error('Login error:', error.response?.data?.msg || 'Login failed');\r\n                setErrors({ email: error.response?.data?.msg || 'Invalid email or password' }); // Show error message\r\n            }\r\n        }\r\n    };\r\n\r\n    // Handle input change\r\n    const handleInputChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    // Handle user type selection\r\n    const handleUserTypeSelection = (type) => {\r\n        setUserType(type);\r\n        setStep(2); // Move to the login form after selection\r\n    };\r\n\r\n    // Handle Back button to go back to user type selection\r\n    const handleBack = () => {\r\n        setStep(1); // Go back to tenant/owner selection\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar /> {/* Include the Navbar at the top */}\r\n            <div className=\"bg-gray-100 py-10 min-h-screen\">\r\n                <div className=\"max-w-3xl mx-auto px-6\">\r\n                    {step === 1 ? (\r\n                        // Step 1: Select Tenant or Owner\r\n                        <div className=\"bg-white p-10 shadow-xl rounded-lg mb-10 text-center\">\r\n                            <h1 className=\"text-4xl text-customGreen font-bold mb-6\">Welcome to DocEase!</h1>\r\n                            <p className=\"text-lg text-gray-600 mb-6\">Are you logging in as a Tenant or an Owner?</p>\r\n                            <div className=\"flex justify-center space-x-10\">\r\n                                <button\r\n                                    onClick={() => handleUserTypeSelection('tenant')}\r\n                                    className=\"bg-customGreen text-white py-3 px-6 rounded-lg hover:bg-green-600\"\r\n                                >\r\n                                    Login as Tenant\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => handleUserTypeSelection('owner')}\r\n                                    className=\"bg-customGreen text-white py-3 px-6 rounded-lg hover:bg-green-600\"\r\n                                >\r\n                                    Login as Owner\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        // Step 2: Login form\r\n                        <div className=\"bg-white p-10 shadow-xl rounded-lg mb-10\">\r\n                            <h1 className=\"text-4xl text-customGreen font-bold mb-6 text-center\">\r\n                                Login as {userType === 'tenant' ? 'Tenant' : 'Owner'}\r\n                            </h1>\r\n                            <form>\r\n                                <div className=\"mb-6\">\r\n                                    <label className=\"block text-lg text-gray-600 mb-2\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        value={formData.email}\r\n                                        onChange={handleInputChange}\r\n                                        className=\"w-full border border-gray-300 rounded-lg p-3\"\r\n                                    />\r\n                                    {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n                                </div>\r\n\r\n                                <div className=\"mb-6\">\r\n                                    <label className=\"block text-lg text-gray-600 mb-2\">Password</label>\r\n                                    <input\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        name=\"password\"\r\n                                        value={formData.password}\r\n                                        onChange={handleInputChange}\r\n                                        className=\"w-full border border-gray-300 rounded-lg p-3\"\r\n                                    />\r\n                                    {errors.password && <p className=\"text-red-500 text-sm\">{errors.password}</p>}\r\n                                    <div className=\"mt-2\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            id=\"showPassword\"\r\n                                            checked={showPassword}\r\n                                            onChange={() => setShowPassword(!showPassword)}\r\n                                        />\r\n                                        <label htmlFor=\"showPassword\" className=\"ml-2 text-sm text-gray-600\">Show Password</label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={handleLogin}\r\n                                    className=\"w-full bg-customGreen text-white py-3 rounded-lg hover:bg-green-600\"\r\n                                    disabled={loading}\r\n                                >\r\n                                    {loading ? 'Logging in...' : 'Login'}\r\n                                </button>\r\n\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={handleBack}\r\n                                    className=\"w-full bg-gray-400 text-white py-3 rounded-lg hover:bg-gray-600 mt-4\"\r\n                                >\r\n                                    Back\r\n                                </button>\r\n\r\n                                <div className=\"mt-4 text-center\">\r\n                                    <a href=\"/forgot-password\" className=\"text-sm text-customGreen hover:underline\">\r\n                                        Forgot Password?\r\n                                    </a>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}